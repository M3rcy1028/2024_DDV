<!DOCTYPE html>
<html>
    <head>
        <link rel='stylesheet' href='/stylesheets/style.css' />
        <script src="/javascripts/jquery-3.7.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

        <!-- Bootstrap CSS -->
        <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap.min.css' />
        <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap-grid.min.css' />
        <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap-reboot.min.css' />
    
        <!-- Bootstrap Icon -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
        <!-- rootbar 디자인 -->
        <link rel='stylesheet' href='/stylesheets/rootbar.css'/>
    
        <style>
            .chart-container {
                display: flex;
                justify-content: space-between;
                gap: 20px; /* Adds space between the charts */
            }
            .chart-box {
                width: 30%; /* Adjusts each chart's width */
                padding: 10px; /* Adds padding around each chart */
                box-sizing: border-box; /* Ensures padding doesn't affect chart width */
            }
        </style>
    </head>
    <body>  
        <%- include('rootbar.ejs') %>
        <h2 class="d-flex justify-content-center"><b><%= title %></b></h2>
        <br> <br> <br> <br>
        <!-- 표 나타내기 -->
        <div class="chart-container" style="display: flex; justify-content: space-between;">
            <div style="width:30%" class="chart-box">
                <canvas id="genderChart" width="400" height="400"></canvas>
            </div>
            <div style="width:30%" class="chart-box">
                <canvas id="trustChart" width="400" height="400"></canvas>
            </div>
            <div style="width:30%" class="chart-box">
                <canvas id="moneyChart" width="400" height="400"></canvas>
            </div>
        </div>
        <br> <br> <br> <br> <br>
        <div class="chart-container" style="display: flex; justify-content: space-between;">
            <div style="width:30%" class="chart-box">
                <canvas id="ageChart" width="400" height="400"></canvas>
            </div>
            <div style="width:30%" class="chart-box">
                <canvas id="loginChart" width="400" height="400"></canvas>
            </div>
        </div>
        </body>
    </body>
    <script>
    // 성별 차트
    const ctx = document.getElementById('genderChart');
    const genderChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ["남성", "여성"],
            datasets: [{
                label: "Gender Distribution",
                backgroundColor: ["#095cff", "#f591c7"],
                data: [<%= genderData.maleCount %>, <%= genderData.femaleCount %>]
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Gender Distribution',
                fontSize: 25
            }
        }
    });
    // 신뢰도 차트
    const ctx2 = document.getElementById('trustChart');
    const trustChart = new Chart(ctx2, {
        type: 'horizontalBar',
        data: {
            labels: [
                "<%= trustData.ntop1 %>", 
                "<%= trustData.ntop2 %>", 
                "<%= trustData.ntop3 %>", 
                "<%= trustData.ntop4 %>", 
                "<%= trustData.ntop5 %>",
                "<%= trustData.ntop6 %>", 
                "<%= trustData.ntop7 %>"
            ],
            datasets: [{
                label: "Trust Top7",
                backgroundColor: ["#3e95cd", "#8e5ea2","#3cba9f","#e8c3b9","#c45850", "#5f9ea0", "#e9967a"],
                data: [
                    <%= trustData.top1 %>, 
                    <%= trustData.top2 %>, 
                    <%= trustData.top3 %>, 
                    <%= trustData.top4 %>, 
                    <%= trustData.top5 %>,
                    <%= trustData.top6 %>,
                    <%= trustData.top7 %>]
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: 'Trust Top7',
                fontSize: 20
            },
            scales: { xAxes: [{ ticks: { min: 0, } }] }
        }
    });
    // 돈 차트
    const ctx3 = document.getElementById('moneyChart');
    const moneyChart = new Chart(ctx3, {
        type: 'bar',
        data: {
            labels: [
                "<%= moneyData.ntop1 %>", 
                "<%= moneyData.ntop2 %>", 
                "<%= trustData.ntop3 %>", 
                "<%= moneyData.ntop4 %>", 
                "<%= moneyData.ntop5 %>",
                "<%= moneyData.ntop6 %>", 
                "<%= moneyData.ntop7 %>"
            ],
            datasets: [{
                label: "Money Top7",
                // backgroundColor: [getRandomColor(),getRandomColor(),getRandomColor(),getRandomColor(),getRandomColor(),getRandomColor(),getRandomColor()],
                backgroundColor: ["#403273", "#D9A441","#732C5A","#D4D955","#391A21", "#3A5932", "#AFE161"],
                data: [
                    <%= moneyData.top1 %>, 
                    <%= moneyData.top2 %>, 
                    <%= moneyData.top3 %>, 
                    <%= moneyData.top4 %>, 
                    <%= moneyData.top5 %>,
                    <%= moneyData.top6 %>,
                    <%= moneyData.top7 %>]
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: 'Money Top7',
                fontSize: 20
            },
            scales: { yAxes: [{ ticks: { min: 0, } }] }
        }
    });
    // 연령대 분포차트
    const ctx4 = document.getElementById('ageChart');
    const ageChart = new Chart(ctx4, {
        type: 'radar',
        data: {
            labels: [
                "0-9", "10-19", "20-29", "30-39", "40-49", "50+"
            ],
            datasets: [
            {
            label: "usr",
            fill: true,
            backgroundColor: "rgba(255,99,132,0.2)",
            borderColor: "rgba(255,99,132,1)",
            pointBorderColor: "#fff",
            pointBackgroundColor: "rgba(255,99,132,1)",
            data: [
                <%= ageData.age0 %>,
                <%= ageData.age1 %>,
                <%= ageData.age2 %>,
                <%= ageData.age3 %>,
                <%= ageData.age4 %>,
                <%= ageData.age5 %>]
            }]
        },
        options: {
        title: {
            display: true,
            text: 'Distribution in Age',
            fontSize: 20
        },
        scale: {ticks: { beginAtZero:true, stepSize:1, max: <%= ageData.maxcount %>}}
        }
    });
    // 회원가입 line-chart (x전체 / y월별)
    // JSON 데이터 파싱
    const loginData = JSON.parse('<%- loginData %>');
    // 월별로 1월부터 12월까지의 라벨 생성
    const months = ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
    // 년도별로 데이터를 그룹화
    const groupedData = {};
    loginData.forEach(item => {
        const year = item.year;
        if (!groupedData[year]) {
            groupedData[year] = new Array(12).fill(0); // 12개월에 대한 초기화
        }
        const monthIndex = item.month - 1; // 0부터 11까지 인덱스
        groupedData[year][monthIndex] = item.login_count; // 월별 로그인 수 업데이트
    });
    // datasets을 년도별로 생성
    const datasets = Object.keys(groupedData).map(year => ({
        label: `${year} Logins`, // 년도별 레이블
        data: groupedData[year], // 해당 년도의 로그인 수
        fill: false, // 선 아래 채우지 않음
        borderColor: getRandomColor(), // 년도별 선 색상 (임의 색상)
        tension: 0.1 // 선의 굴곡 정도
    }));
    // 랜덤 색상 생성 함수
    function getRandomColor() {
        const r = Math.floor(Math.random() * 256);
        const g = Math.floor(Math.random() * 256);
        const b = Math.floor(Math.random() * 256);
        return `rgb(${r}, ${g}, ${b})`;
    }

    // 차트 초기화
    const ctx5 = document.getElementById('loginChart').getContext('2d');
    const loginChart = new Chart(ctx5, {
        type: 'line', // Line chart
        data: {
            labels: months, // X축 (1월부터 12월까지)
            datasets: datasets // 년도별 데이터
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Month'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Login Count'
                    },
                    beginAtZero: true,
                    stepSize: 1
                }
            }
        }
    });
    // 게시글 조회수 top7 polar-chart (선택년도)
    // wishlist 높은 게시글 top7 douhnut chart
    </script>
</html>
