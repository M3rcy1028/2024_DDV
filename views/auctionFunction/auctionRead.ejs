<!DOCTYPE html>
<html>

<head>
    <link rel='stylesheet' href='/stylesheets/sidebar.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="/javascripts/jquery-3.7.1.min.js"></script>

    <!-- 알림창 UI -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- 상단바 css -->
    <link rel='stylesheet' href='/stylesheets/rootbar.css' />
    <link rel='stylesheet' href='/stylesheets/nav.css' />

    <!-- Bootstrap CSS -->
    <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap.min.css' />
    <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap-grid.min.css' />
    <link rel='stylesheet' href='/vendors/bootstrap/css/bootstrap-reboot.min.css' />

    <!-- Bootstrap Icon -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

    <title>
        <%= title %>
    </title>

    <style>
        .breadcrumb a {
            text-decoration: none;
            color: black;
        }

        /* board 관련 css */
        .board-left {
            width: 300px;
        }

        .board-right {
            width: 700px;
        }

        .read-box {
            width: 900px;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0.5px 0.5px 2px 1px #eee;
        }

        #sub-info {
            color: #686969;
        }

        .input-group .input-group-text {
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .input-group .form-control {
            height: auto;
            /* 높이를 자동으로 설정 */
        }

        .card {
            background: #fff;
            transition: .5s;
            border: 0;
            padding-top: 50px;
            margin-top: 50px;
            margin-bottom: 30px;
            margin: auto;
            border-radius: .55rem;
            position: relative;
            width: 70%;
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
        }

        .chat .chat-history {
            padding: 20px;
            border-bottom: 2px solid #fff;
            height: 520px;
            overflow-y: auto;
            -ms-overflow-style: none;
        }

        .chat .chat-history::-webkit-scrollbar {
            display: none;
        }

        .chat .chat-history ul {
            padding: 0
        }

        .chat .chat-history ul li {
            list-style: none;
            margin-bottom: 30px
        }

        .chat .chat-history ul li:last-child {
            margin-bottom: 0px
        }

        .chat .chat-history .message-data {
            margin-bottom: 15px
        }

        .chat .chat-history .message-data img {
            border-radius: 40px;
            width: 40px
        }

        .chat .chat-history .message-data-time {
            color: #434651;
            padding-left: 6px
        }

        .chat .chat-history .message {
            color: #444;
            padding: 18px 20px;
            line-height: 26px;
            font-size: 16px;
            border-radius: 7px;
            display: inline-block;
            position: relative
        }

        /* .chat .chat-history .message:after {
            bottom: 100%;
            left: 10px;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-bottom-color: #fff;
            border-width: 10px;
            margin-left: -10px
        } */

        .chat .chat-history .other-message {
            background: #efefef
        }

        /* .chat .chat-history .my-message:after {
            bottom: 100%;
            left: 30px;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-bottom-color: #efefef;
            border-width: 10px;
            margin-left: -10px
        } */

        .chat .chat-history .my-message {
            background: #e8f1f3;
            text-align: right
        }

        /* .chat .chat-history .other-message:after {
            border-bottom-color: #e8f1f3;
            right: 30px
        } */

        .chat .chat-message {
            flex: 1 0 auto;
            padding: 20px
        }

        .profile-img {
            position: relative;
            top: 0;
            left: 0;
            transform: translate(50, 50);
            width: 45px;
            height: 45px;
            border-radius: 50%;
            object-fit: cover;
            margin: auto;
        }

        .online,
        .offline,
        .me {
            margin-right: 2px;
            font-size: 8px;
            vertical-align: middle
        }

        .online {
            color: #86c541
        }

        .offline {
            color: #e47297
        }

        .me {
            color: #1d8ecd
        }

        .float-right {
            float: right
        }

        .clearfix:after {
            visibility: hidden;
            display: block;
            font-size: 0;
            content: " ";
            clear: both;
            height: 0
        }

        /* 공통 스타일 */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
    </style>
</head>

<body>
    <!-- 상단 바 -->
    <%- include('../nav.ejs') %>

        <div class="mb-5">
            <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">홈</a></li>
                    <li class="breadcrumb-item"><a href="/auctionBoard/auctionList">목록</a></li>
                    <li class="breadcrumb-item active" aria-current="page">
                        <b>
                            <%=row.Category%>
                        </b>
                    </li>
                </ol>
            </nav>
        </div>

        <div class="d-flex justify-content-center board">
            <div class="d-flex align-items-center flex-column board-left me-4">
                <img src="<%= row.Img %>" width="300" height="300" alt="판매 상품 이미지">
                <span>
                    <%= row.Nickname %> (<%= row.Bid%>)
                </span>
            </div>
            <div class="d-flex flex-column board-right">
                <div class="d-flex flex-column board-content mb-3">
                    <h2 class="mb-3" name="title" id="title">
                        <b>
                            <%= row.Title %>
                        </b>
                        <span class="badge text-bg-warning">
                            <i class="bi bi-stopwatch"></i>
                            <span id="timer"> </span>
                        </span>
                    </h2>
                    <h2 class="mb-3" name="smoney" id="smoney">
                        시작가: <%= row.Smoney %> 원
                    </h2>
                    <h2 class="mb-3" name="cmoney">
                        입찰가:
                        <span id="cmoney">
                            <%= row.Emoney %>
                        </span>
                        원
                    </h2>
                    <span class="mb-3" name="sub-info" id="sub-info">
                        게시일 <%= row.Stime %>
                    </span>
                    <p class="mb-3" name="content" id="content">
                        <%- row.Content %>
                    </p>
                </div>
                <div class="d-flex justify-content-between board-btn mt-auto">

                    <!-- 글 작성자에게 보이지 않는는 버튼-->
                    <% if (!UpdateEnable && !row.Timeover) { %>
                        <div class="d-flex ms-auto">
                            <button onclick="asking()" class="btn btn-dark" id="askingbtn">호가</button>
                        </div>
                        <% } %>
                </div>
            </div>
        </div>


        <div class="container" style="padding: 50px;">
            <div class="row clearfix">
                <div class="card chat-app">
                    <div class="chat">
                        <div class="chat-history">
                            <ul id="messages" class="m-b-0">

                            </ul>
                        </div>
                        <div class="chat-message clearfix">
                            <div class="input-group mb-0">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-send"></i></span>
                                </div>
                                <input id="input" type="text" class="form-control" autocomplete="off" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bootstrap JS -->
        <script src="/vendors/bootstrap/js/bootstrap.bundle.min.js"></script>

        <script>
            //rootLogin, usrLogin 값
            var rootLogin = '<%= rootLogin %>';
            var usrLogin = '<%= usrLogin %>';

            //문자열로 처리된 값 boolean으로 변경
            usrLogin = (usrLogin === 'true');
            rootLogin = (rootLogin === 'true');

            console.log("서버에서 전달된 rootLogin 값:", rootLogin);
            console.log("서버에서 전달된 usrLogin 값:", usrLogin);
        </script>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io({
        auth: {
            usrid: '<%= usrid %>'
        }
    });

    var inputField = document.getElementById('input');

    // 페이지 접속 시 게시글 번호에 해당하는 채팅방 접속
    console.log('<%=Anum%>');
    socket.emit("auction_join", '<%=Anum%>');

    // 채팅 입력 시 서버에 메시지 내용과 메타데이터 전송
    function sendMessage() {
        if (inputField.value) {
            socket.emit('auction_chat_message', {
                message: inputField.value,
                Anum: '<%=Anum%>',
                sender: '<%= usrid %>', // 쿠키에서 보내는 사람
            });
            inputField.value = '';
        }
    }

    inputField.addEventListener('keydown', (event) => {
        // Enter 키만 메시지를 전송하도록 제한
        if (event.key === 'Enter') {
            sendMessage();
        }
    });

    async function asking() {
        // 호가 입력
        const { value: asked_price } = await Swal.fire({
            title: '호가를 입력하세요.',
            input: 'number',
            inputPlaceholder: '호가 입력'
        })
        console.log(asked_price)
        if (asked_price) {
            console.log(asked_price)
            if ((asked_price > parseInt(cmoney.innerHTML)) && (asked_price > parseInt('<%= row.Smoney %>'))) {
                console.log(asked_price)
                socket.emit("auction_asking", { Buyer: '<%= usrid %>', Anum: '<%=Anum%>', Aprice: asked_price });
            }
        }
    }

    // 단일 채팅 받아서 쓰기
    socket.on('auction_chat_message', (chat) => {
        const item = document.createElement('li');
        item.classList.add('clearfix');

        const div = document.createElement('div');
        if (chat.Sender === '<%= usrid %>') {
            div.className = 'message my-message float-right';
        }
        else {
            div.className = 'message other-message';
        }
        div.innerHTML = chat.Message
        item.appendChild(div);
        messages.appendChild(item);

        const scroll = document.querySelector('.chat-history');
        scroll.scrollTop = scroll.scrollHeight;
    });

    // 모든 메시지 로그 출력
    socket.on('auction_load_chatlog', (chats) => {
        messages.innerHTML = "";
        const chatList = [];
        chats.forEach((chat) => {
            if (chat.Sender === '<%= usrid %>') {
                chatList.push(`<li class="clearfix">
                                <div class="message my-message float-right">${chat.msg}</div>
                            </li>`)
            }
            else {
                chatList.push(`<li class="clearfix">
                                <div class="message other-message float-left">${chat.msg}</div>
                            </li>`)
            }
        })
        messages.innerHTML = chatList.join('');
        const scroll = document.querySelector('.chat-history');
        scroll.scrollTop = scroll.scrollHeight;
    })

    // 타이머 값 업데이트
    socket.on('auction_timer', (time) => {
        timer.innerHTML = time;
    })

    socket.on('auction_update_emoney', (price) => {
        cmoney.innerHTML = price;
    })

</script>

</html>